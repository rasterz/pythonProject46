version: '3.8'

services:
  db_postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  migrations:
    build: .
    env_file: .env
    environment:
      DB_HOST: db_postgres
    depends_on:
      db_postgres:
        condition: service_healthy
    command: python manage.py migrate

  api:
    build: .
    env_file: .env
    environment:
      DB_HOST: db_postgres
    ports:
      - 8000:8000
    depends_on:
#      db_postgres:
#        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./todolist:/opt/todolist/todolist
      - ./core:/opt/todolist/core


  collect_static:
    build: .
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/todolist/static/

  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
     - 80:80
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully

    volumes:
        - ./nginx.conf:/etc/nginx/conf.d/default.conf
        - .django_static:/usr/share/nginx/html/static
#
#
#
#
volumes:
    postgres_data:
    django_static: